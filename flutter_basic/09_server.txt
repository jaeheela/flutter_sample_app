서버 통신의 필요성
- 앱 내 실시간으로 추가, 수정, 삭제되어야 하는 콘텐츠 시 필수
- 자유게시판처럼 내 디바이스 바깥에 있는 데이터를 가져오거나 내 디바이스 바깥으로 데이터 전송하는 기능 구현 시 필수
- 서버를 두고 서버와 클라이언트가 통신해서 앱 구현

HTTP 통신
- 웹에서 주고받는 거의 모든 데이터
- URI(자원의 위치)를 정확히 지정하고 메서드라고 불리는  행위를 지정해서 보내야함

비동기 통신
- HTTP 통신에 대한 응답을 마냥 기다리지 않음
- 사용자 인터렉션 처리 등 다른 할 일이 있으면 그 일을 진행하고 있다가 HTTP 응답을 받으면 비로소 그에 대한 처리를 수행함
- 예시) 타이머 기능

메서드
- HTTP 요청은 기본적으로 특정 위치(URI)에 요청을 보내는 형식
- 무엇을 : 특정 위치(URI)에
- 어떻게 : 메서드(GET, POST, PUT, PATCH, DELETE)
GET : 요청Body x 역동성(여러번호출해도동일한결과)
POST : 요청Body o, n번 요청하면 n번 추가
PUT : 요청Body o, 자원 수정
PATCH : 요청Body o, 자원 수정
DELETE : 요청Body x or o ,지원 삭제

상태코드
- HTTP 요청에 대한 응답의 상태를 나타내는 코드
- 2XX(성공), 3XX(자료의위치바뀜-redirect), 4XX(요청오류), 5XX(응답오류)

HTTP Cats
- HTTP cats 웹사이트에서 귀여운 고양이 사진과 함께 다양한 상태 코드 확인 가능
- https://http.cat

dart:http 라이브러리
- API 요청 및 응답 등 HTTP 통신과 관련된 작업을 쉽게 할 수 있도록 도움
- API 요청을 보내면 언제 응답을 받을 수 알 수 없으므로 모든 작업은 Future(비동기)기반으로 이루어짐
- 서버로부터 고양이에 대한 무작위 정보 받을 수 있는 API
- https://alexwohlbruck.github.io/cat-facts/
- https://alexwohlbruck.github.io/cat-facts/docs/endpoints/facts.html
[GET] https://cat-fact.herokuapp.com/facts/random?animal_type=cat&amount=5
